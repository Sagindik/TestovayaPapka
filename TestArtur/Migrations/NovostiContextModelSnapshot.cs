// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestArtur.Data;

namespace TestArtur.Migrations
{
    [DbContext(typeof(NovostiContext))]
    partial class NovostiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestArtur.Data.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datadobavleniya")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kartinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opisanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TegId")
                        .HasColumnType("int");

                    b.Property<string>("Zagolovok")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TegId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("TestArtur.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naimenovanie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("TestArtur.Data.Novost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datadobavleniya")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kartinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TegId")
                        .HasColumnType("int");

                    b.Property<bool>("Vidimost")
                        .HasColumnType("bit");

                    b.Property<string>("Zagolovok")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TegId");

                    b.ToTable("Novost");
                });

            modelBuilder.Entity("TestArtur.Data.Teg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Nazvanie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Teg");
                });

            modelBuilder.Entity("TestArtur.Models.BlogViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datadobavleniya")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kartinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opisanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TegId")
                        .HasColumnType("int");

                    b.Property<string>("Zagolovok")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogViewModel");
                });

            modelBuilder.Entity("TestArtur.Data.Blog", b =>
                {
                    b.HasOne("TestArtur.Data.Teg", "Teg")
                        .WithMany("Blogs")
                        .HasForeignKey("TegId");

                    b.Navigation("Teg");
                });

            modelBuilder.Entity("TestArtur.Data.Novost", b =>
                {
                    b.HasOne("TestArtur.Data.Teg", "Teg")
                        .WithMany("Novosts")
                        .HasForeignKey("TegId");

                    b.Navigation("Teg");
                });

            modelBuilder.Entity("TestArtur.Data.Teg", b =>
                {
                    b.HasOne("TestArtur.Data.Category", "Category")
                        .WithMany("Tegs")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TestArtur.Data.Category", b =>
                {
                    b.Navigation("Tegs");
                });

            modelBuilder.Entity("TestArtur.Data.Teg", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Novosts");
                });
#pragma warning restore 612, 618
        }
    }
}
